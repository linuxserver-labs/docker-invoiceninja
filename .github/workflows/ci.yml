name: CI

on:
  workflow_dispatch:
  push:
    tags:
    - "v*.*.*"
    branches:
    - main
  pull_request:
    types:
    - opened
    - reopened
  schedule:
  - cron: "0 0 * * 6"

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set build date
      run: echo "BUILD_DATE=$(date '+%Y-%m-%dT%H:%M:%S%:z')" >> $GITHUB_ENV

    - name: Prepare
      id: prep
      run: |
        REGISTRY_IMAGE=$(echo "ghcr.io/$GITHUB_REPOSITORY" | sed 's/docker-//')
        VERSION=$(curl -s https://api.github.com/repos/invoiceninja/invoiceninja/releases | jq -rc 'limit(1;.[] | select( .target_commitish | match("v5-stable"))) .tag_name')
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        TAGS="${REGISTRY_IMAGE}:${VERSION},${REGISTRY_IMAGE}:latest"
        echo ::set-output name=tags::${TAGS}

        if [ "${{github.event_name}}" == "pull_request" ]; then
          echo ::set-output name=push::false
          echo ::set-output name=cache_from::"type=registry,ref=${REGISTRY_IMAGE}:buildcache"
          echo ::set-output name=cache_to::""
        else
          echo ::set-output name=push::true
          echo ::set-output name=cache_from::"type=registry,ref=${REGISTRY_IMAGE}:buildcache"
          echo ::set-output name=cache_to::"type=registry,ref=${REGISTRY_IMAGE}:buildcache,mode=max"
        fi

        echo ::set-output name=github_server_url::"${GITHUB_SERVER_URL}"
        echo ::set-output name=BUILD_DATE::$(date '+%Y-%m-%dT%H:%M:%S%:z')
        echo ::set-output name=VERSION::${VERSION}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:master

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: linuxserver-labs
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ steps.prep.outputs.push }}
        tags: ${{ steps.prep.outputs.tags }}
        build-args: |
          IMAGE_SOURCE=${{ steps.prep.outputs.github_server_url }}/${{ github.repository }}
          BUILD_DATE=${{ steps.prep.outputs.BUILD_DATE }}
          VERSION=${{ steps.prep.outputs.VERSION }}
        cache-from: ${{ steps.prep.outputs.cache_from }}
        cache-to: ${{ steps.prep.outputs.cache_to }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
